{"version":3,"sources":["components/StartingPage/StartingPage.js","components/SignUpPage/SignUpPage.js","components/Header/Header.js","components/Preloader/Preloader.js","components/LogInPage/LogInPage.js","components/GameSelect/GameSelect.js","components/Game/ClassicGame/Question.js","components/Game/ClassicGame/Buttons.js","components/Game/ClassicGame/ProgressBar.js","components/Game/ClassicGame/Game.js","components/Game/SpreeGame/Question.js","components/Game/SpreeGame/Buttons.js","components/Game/SpreeGame/ProgressBar.js","components/Game/SpreeGame/Game.js","components/Game/InfiniteGame/Question.js","components/Game/InfiniteGame/Buttons.js","components/Game/InfiniteGame/Game.js","components/Game/ClassicGame/GameFinished.js","components/Error/Error.js","components/Modes/ClassicMode/ClassicMode.js","components/Modes/SpreeMode/SpreeMode.js","components/Modes/InfiniteMode/InfiniteMode.js","App.js","index.js","img/madmindNoText.png","img/madmind.png"],"names":["StartingPage","react_default","a","createElement","className","alt","src","require","react_router_dom","to","Component","SignUpPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","username","password","passwordConfirm","redirect","handleSubmit","bind","assertThisInitialized","formIsValid","test","alert","length","event","_this2","preventDefault","data","highScores","JSON","stringify","counts","lastScores","totalScore","handleValidation","console","log","fetch","body","method","headers","Content-Type","ACCEPT","then","response","json","myJSON","catch","err","setTimeout","setState","_this3","react_router","onSubmit","type","name","placeholder","onChange","target","value","onClick","Header","authenticated","Preloader","LogInPage","myJson","apiToken","api_token","GameSelect","Question","props","question","Button","answer","Filler","style","width","concat","percentage","ProgressBar","Game","questions","isLoading","time","questionIndex","correctAnswer","points","gameRunning","fetchQuestions","countDown","handleClick","i","j","Math","floor","random","_ref","url","toString","arr","toConsumableArray","splice","obj","answers","text","correct","shuffle","push","e","timer","setInterval","clearInterval","startTimer","_this$state","components_Preloader_Preloader","ClassicGame_Question","map","Buttons","ClassicGame_ProgressBar","ProgressBar_Filler","questionsAnswered","SpreeGame_Question","SpreeGame_Buttons","SpreeGame_ProgressBar","wrongAnswer","InfiniteGame_Question","InfiniteGame_Buttons","GameFinished","top10Players","stateName","axios","get","_this2$setState","defineProperty","getData","Table_default","bordered","hover","condensed","row","index","key","email","Error","ClassicMode","App","components_Header_Header","path","component","exact","SignInPage","SpreeMode","InfiniteMode","Classic","Spree","Infinite","root","document","querySelector","ReactDOM","render","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5447722b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './startingPage.css'\r\n\r\nclass StartingPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"monkaS\">\r\n                        <img className=\"logo\" alt=\"madmind\" src={require('../../img/madmindNoText.png')} />\r\n                        <div className=\"btn-group\">\r\n                            <Link to=\"/login\">\r\n                                <button className=\"btn log-in\">Login</button>\r\n                            </Link>\r\n                            <Link to=\"/signup\">\r\n                                <button className=\"btn sign-up\">Sign Up</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartingPage;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"./signUpPage.css\";\r\n\r\nclass SignUpPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: 0,\r\n      username: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      redirect: false\r\n    };\r\n\r\n    // Bind the function to make `this` work in the callback\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // This only logs the login.json after stuff has been mounted\r\n  // Gonna get removed later\r\n  //   componentDidMount() {\r\n  //     fetch(\"http://localhost:3004/users\")\r\n  //       .then(response => response.json())\r\n  //       .then(myJSON => {\r\n  //         console.log(myJSON);\r\n  //       });\r\n  //   }\r\n\r\n  handleValidation() {\r\n    let formIsValid = true;\r\n\r\n    // Test if the username and password are valid inputs\r\n    if (!/^[a-zA-Z]+$/.test(this.state.username)) {\r\n      formIsValid = false;\r\n      alert(\"Your username can contain only letters\");\r\n    }\r\n    if (this.state.password.length < 5) {\r\n      formIsValid = false;\r\n      alert(\"Your password must be atleast 5 characters long\");\r\n    }\r\n    if (this.state.passwordConfirm !== this.state.password) {\r\n      formIsValid = false;\r\n      alert(\"Your passwords don't match\");\r\n    }\r\n    return formIsValid;\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Don't know why the id increments every time it's pushed to the json array help plox!?!?!!11!!1!\r\n    let data = {\r\n      // id: this.state.id,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      highScores: JSON.stringify({}),\r\n      counts: JSON.stringify({}),\r\n      lastScores: JSON.stringify({}),\r\n      totalScore: 0\r\n    };\r\n\r\n    // POST a bunch of mock up data to out fake rest api\r\n    if (this.handleValidation()) {\r\n      const url = \"http://joelmaenpaa.com:8000/api/register\";\r\n\r\n      console.log(JSON.stringify(data));\r\n      fetch(url, {\r\n        body: JSON.stringify(data),\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ACCEPT: \"application/json\"\r\n        }\r\n        // mode : 'no-cors'\r\n      })\r\n        .then(response => response.json())\r\n        .then(myJSON => {\r\n          console.log(myJSON);\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n      //       var xhr = new XMLHttpRequest();\r\n      //         xhr.open(\"POST\", url, true);\r\n\r\n      // //Send the proper header information along with the request\r\n      // xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n      // xhr.setRequestHeader(\"ACCEPT\", \"application/json\");\r\n      // xhr.onreadystatechange = function() { // Call a function when the state changes.\r\n      //     if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\r\n      //       var response = xhr.responseText;\r\n      //         console.log(\"HERE NIG\", response);\r\n      //     }else{\r\n      //       console.log(this.status);\r\n      //     }\r\n      // }\r\n      // xhr.send(JSON.stringify(data));\r\n      // xhr.send(new Int8Array());\r\n      // xhr.send(document);\r\n\r\n      setTimeout(() => {\r\n        this.setState({ redirect: true });\r\n      }, 1000);\r\n    } else {\r\n      console.log(\"Form has errors!\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const redirect = this.state.redirect;\r\n    if (redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"form-wrapper\">\r\n        <div className=\"form-group\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              onChange={event =>\r\n                this.setState({ username: event.target.value })\r\n              }\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={event =>\r\n                this.setState({ password: event.target.value })\r\n              }\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"password\"\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"Confirm Password\"\r\n              onChange={event =>\r\n                this.setState({ passwordConfirm: event.target.value })\r\n              }\r\n            />\r\n            <br />\r\n            <button\r\n              className=\"signup-button\"\r\n              onClick={event => this.handleSubmit(event)}\r\n            >\r\n              SIGN UP\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","// Import all the stuff we need\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            authenticated: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <NavLink to=\"/\">\r\n                    <img className=\"header-logo\" alt=\"madmind\" src={require('../../img/madmind.png')} />\r\n                </NavLink>\r\n\r\n                <nav className=\"navbar\">\r\n                    <NavLink to=\"/login\" className=\"navbar-link\">\r\n                        LOGIN\r\n                    </NavLink>\r\n                    <NavLink to=\"/signup\" className=\"navbar-link\">\r\n                        SIGN UP\r\n                    </NavLink>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","// Import all the important stuff we need\r\nimport React, { Component } from 'react';\r\nimport './preloader.css';\r\n\r\n// Initialize the preloader component as a class type component\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div id='loader-wrapper'>\r\n                <div id=\"loader\">\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Preloader;","import React, { Component } from \"react\";\r\n\r\nclass LogInPage extends Component {\r\n  // constructor() {\r\n  //     // super();\r\n  //     // this.state = {\r\n  //     //     username: \"\",\r\n  //     //     password: \"\"\r\n  //     // }\r\n\r\n  //     this.handleSubmit = this.handleSubmit.bind(this)\r\n  // }\r\n\r\n  handleSubmit = () => {\r\n    const data = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    const url = \"http://joelmaenpaa.com:8000/api/login\";\r\n\r\n    console.log(JSON.stringify(data));\r\n    fetch(url, {\r\n      body: JSON.stringify(data),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\"\r\n        // 'Authorization': 'Bearer '+ apiToken;\r\n      }\r\n      // mode : 'no-cors'\r\n    })\r\n      .then(response => response.json())\r\n      .then(myJson => {\r\n        // console.log(myJSON);\r\n        const apiToken = myJson.api_token;\r\n        console.log(\"API TOKEN \", apiToken);\r\n      })\r\n      .catch(err => console.log(err));\r\n    // console.log(\"monkaS\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-wrapper\">\r\n        <div className=\"form-group\">\r\n          {/* <form> */}\r\n          <input\r\n            className=\"signup-input\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            onChange={event => this.setState({ username: event.target.value })}\r\n          />\r\n          <br />\r\n          <input\r\n            className=\"signup-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={event => this.setState({ password: event.target.value })}\r\n          />\r\n          <br />\r\n          <button className=\"signup-button\" onClick={this.handleSubmit}>\r\n            LOGIN\r\n          </button>\r\n          {/* </form> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogInPage;\r\n","import React, { Component } from 'react';\r\nimport './gameSelect.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass GameSelect extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"select-wrapper\">\r\n                <div className=\"monkaS\">\r\n                    <img className=\"logo\" alt=\"madmind\" src={require('../../img/madmindNoText.png')} />\r\n                    <div className=\"button-group\">\r\n                        <Link to=\"/classic\">\r\n                            <button className=\"game-button\">Classic</button>\r\n                        </Link>\r\n                        <Link to=\"/spree\">\r\n                            <button className=\"game-button\">Spree</button>\r\n                        </Link>\r\n                        <Link to=\"/infinite\">\r\n                            <button className=\"game-button\">Infinite</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameSelect;","import React from 'react';\r\n\r\n// A stateless question component just for code readability\r\nfunction Question(props) {\r\n    return (\r\n        <div className=\"question\">\r\n            <p>{props.question}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","import React from \"react\";\r\n\r\n// A stateless button component just for code readability\r\nfunction Button(props) {\r\n  return (\r\n    <button onClick={props.onClick} id={props.id} className=\"answer-button\">\r\n      {props.answer}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\n\r\n// Filler component for the progress bar\r\nfunction Filler(props) {\r\n    return <div className=\"filler\" style={{ width: `${props.percentage}%`}}/>\r\n}\r\n\r\n// The actual progress bar component\r\nfunction ProgressBar(props) {\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <Filler percentage={props.percentage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Question from \"./Question\";\r\nimport Button from \"./Buttons\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport \"../game.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Game extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      isLoading: true,\r\n      time: 1600,\r\n      questionIndex: 0,\r\n      percentage: 100,\r\n      id: \"\",\r\n      correctAnswer: 0,\r\n      points: 0,\r\n      gameRunning: false\r\n    };\r\n\r\n    // Binding functions\r\n    this.fetchQuestions = this.fetchQuestions.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  // Fetch the questions from database\r\n  fetchQuestions() {\r\n    let numberOfQuestions = 15;\r\n    let url =\r\n      \"http://joelmaenpaa.com:8000/api/getQuestions/\" +\r\n      numberOfQuestions.toString();\r\n    console.log(url);\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        const questions = [];\r\n\r\n        for (let i = 0; i < numberOfQuestions; i++) {\r\n          let arr = [...data];\r\n          arr = arr.splice(i * 13, 13);\r\n          let obj = {};\r\n          obj.question = arr[3];\r\n          obj.answers = [\r\n            { text: arr[4], correct: false },\r\n            { text: arr[5], correct: false },\r\n            { text: arr[6], correct: false },\r\n            { text: arr[7], correct: true }\r\n          ];\r\n          this.shuffle(obj.answers);\r\n          questions.push(obj);\r\n        }\r\n        this.setState({\r\n          questions: questions,\r\n          isLoading: false,\r\n          gameRunning: true\r\n        });\r\n\r\n        console.log(\"[Game.js fetchQuestions]\", this.state);\r\n      })\r\n\r\n      .catch(e => console.log(\"Failed to fetch questions\", e));\r\n  }\r\n\r\n  // This starts the countdown timer\r\n  startTimer() {\r\n    this.timer = setInterval(this.countDown, 10);\r\n  }\r\n\r\n  // This is where the actual countdown happens\r\n  countDown() {\r\n    // Declare some variables so we don't have to use a function to set state\r\n    let time = this.state.time - 1;\r\n    let questionIndex = this.state.questionIndex;\r\n    let percentage =\r\n      this.state.percentage - this.state.percentage / this.state.time;\r\n\r\n    // Set new state for time and percentage\r\n    this.setState({\r\n      time: time,\r\n      percentage: percentage\r\n    });\r\n\r\n    // If time is 0 and user is doesn't answer the last question\r\n    // (time runs out), changes the state of gameRunning to false\r\n    // and redirects the user to the gamefinished page.\r\n    if (questionIndex === 14 && time <= 0) {\r\n      this.setState({ gameRunning: false });\r\n    }\r\n\r\n    // If time is 0 or less than 0 then clear the interval,\r\n    // set state of time back to 15 seconds\r\n    // and update the question\r\n    if (time <= 0) {\r\n      clearInterval(this.timer);\r\n      this.setState({\r\n        time: 1600,\r\n        percentage: 100,\r\n        questionIndex: questionIndex + 1\r\n      });\r\n      this.startTimer();\r\n      console.log(\"Question #\" + (questionIndex + 1));\r\n    }\r\n  }\r\n\r\n  // This will handle the button clicks\r\n  handleClick(event) {\r\n    let questionIndex = this.state.questionIndex;\r\n    let correctAnswer = this.state.correctAnswer + 1;\r\n    let points = this.state.points;\r\n\r\n    if (questionIndex > 13) {\r\n      this.setState({ gameRunning: false });\r\n    }\r\n\r\n    if (event.target.id === \"correct\") {\r\n      this.setState({\r\n        correctAnswer: correctAnswer,\r\n        points: points + 10\r\n      });\r\n    }\r\n\r\n    if (this.state.questionIndex === 14) {\r\n      this.setState({ gameRunning: false });\r\n    }\r\n\r\n    clearInterval(this.timer);\r\n    this.setState({\r\n      time: 1600,\r\n      percentage: 100,\r\n      questionIndex: questionIndex + 1\r\n    });\r\n\r\n    this.startTimer();\r\n    console.log(\"Question #\" + (questionIndex + 1));\r\n    console.log(\"points: \" + this.state.points);\r\n  }\r\n\r\n  // This fetches the questions while the component mounts\r\n  // This also starts the timer\r\n  componentDidMount() {\r\n    this.fetchQuestions();\r\n    this.startTimer();\r\n  }\r\n\r\n  // Stop the timer if the user is a monkey\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    // Just shortening state to something prettier\r\n    const { questions, questionIndex, percentage } = this.state;\r\n\r\n    // Check if the page has finished loading\r\n    if (this.state.isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    if (this.state.gameRunning) {\r\n      return (\r\n        <div className=\"game-wrapper\">\r\n          <div className=\"game-group\">\r\n            <Question question={questions[questionIndex].question} />\r\n            <div className=\"answer-buttons\">\r\n              {questions[questionIndex].answers.map(answer => {\r\n                // console.log(answer);\r\n                return (\r\n                  <Button\r\n                    onClick={this.handleClick}\r\n                    id={answer.correct ? \"correct\" : \"incorrect\"}\r\n                    answer={answer.text}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"timer\">\r\n              <ProgressBar percentage={percentage} />\r\n            </div>\r\n            <div className=\"points\">\r\n              {this.state.correctAnswer + \"/\" + this.state.questions.length}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (!this.state.gameRunning) {\r\n      return <Redirect to=\"/gamefinished\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\n// A stateless question component just for code readability\r\nfunction Question(props) {\r\n    return (\r\n        <div className=\"question\">\r\n            <p>{props.question}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","import React from \"react\";\r\n\r\n// A stateless button component just for code readability\r\nfunction Button(props) {\r\n  return (\r\n    <button onClick={props.onClick} id={props.id} className=\"answer-button\">\r\n      {props.answer}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\n\r\n// Filler component for the progress bar\r\nfunction Filler(props) {\r\n    return <div className=\"filler\" style={{ width: `${props.percentage}%`}}/>\r\n}\r\n\r\n// The actual progress bar component\r\nfunction ProgressBar(props) {\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <Filler percentage={props.percentage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Question from \"./Question\";\r\nimport Button from \"./Buttons\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport \"../game.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Game extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      isLoading: true,\r\n      time: 6000,\r\n      questionIndex: 0,\r\n      percentage: 100,\r\n      id: \"\",\r\n      correctAnswer: 0,\r\n      questionsAnswered: 0,\r\n      points: 0,\r\n      gameRunning: false\r\n    };\r\n\r\n    // Binding functions\r\n    this.fetchQuestions = this.fetchQuestions.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  // Fetch the questions from database\r\n  fetchQuestions() {\r\n    let numberOfQuestions = 120000;\r\n    let url =\r\n      \"http://joelmaenpaa.com:8000/api/getQuestions/\" + numberOfQuestions.toString();\r\n    console.log(url);\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let questions = [];\r\n\r\n        for (let i = 0; i < numberOfQuestions; i++) {\r\n          let arr = [...data];\r\n          arr = arr.splice(i * 13, 13);\r\n          let obj = {};\r\n          obj.question = arr[3];\r\n          obj.answers = [\r\n            { text: arr[4], correct: false },\r\n            { text: arr[5], correct: false },\r\n            { text: arr[6], correct: false },\r\n            { text: arr[7], correct: true }\r\n          ];\r\n          this.shuffle(obj.answers);\r\n          questions.push(obj);\r\n        }\r\n        this.setState({\r\n          questions: questions,\r\n          isLoading: false,\r\n          gameRunning: true\r\n        });\r\n\r\n        console.log(this.state);\r\n      })\r\n\r\n      .catch(e => console.log(\"Failed to fetch questions\", e));\r\n  }\r\n\r\n  // This starts the countdown timer\r\n  startTimer() {\r\n    this.timer = setInterval(this.countDown, 10);\r\n  }\r\n\r\n  // This is where the actual countdown happens\r\n  countDown() {\r\n    // Declare some variables so we don't have to use a function to set state\r\n    let time = this.state.time - 1;\r\n    let percentage =\r\n      this.state.percentage - this.state.percentage / this.state.time;\r\n\r\n    // Set new state for time and percentage\r\n    this.setState({\r\n      time: time,\r\n      percentage: percentage\r\n    });\r\n\r\n    if (time <= 0) {\r\n      this.setState({ gameRunning: false });\r\n    }\r\n  }\r\n\r\n  // This will handle the button clicks\r\n  handleClick(event) {\r\n    let questionIndex = this.state.questionIndex;\r\n    let correctAnswer = this.state.correctAnswer + 1;\r\n    let questionsAnswered = this.state.questionsAnswered + 1;\r\n    let points = this.state.points;\r\n\r\n    if (event.target.id === \"correct\") {\r\n      this.setState({\r\n        correctAnswer: correctAnswer,\r\n        points: points + 10\r\n      });\r\n    }\r\n    this.setState({\r\n      questionIndex: questionIndex + 1,\r\n      questionsAnswered: questionsAnswered\r\n    });\r\n\r\n    console.log(\"Question #\" + (questionIndex + 1));\r\n    console.log(\"points: \" + this.state.points);\r\n  }\r\n\r\n  // This fetches the questions while the component mounts\r\n  // This also starts the timer\r\n  componentDidMount() {\r\n    this.fetchQuestions();\r\n    this.startTimer();\r\n  }\r\n\r\n  // Stop the timer if the user is a monkey\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    // Just shortening state to something prettier\r\n    const { questions, questionIndex, percentage } = this.state;\r\n\r\n    // Check if the page has finished loading\r\n    if (this.state.isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    if (this.state.gameRunning) {\r\n      return (\r\n        <div className=\"game-wrapper\">\r\n          <div className=\"game-group\">\r\n            <Question question={questions[questionIndex].question} />\r\n            <div className=\"answer-buttons\">\r\n              {questions[questionIndex].answers.map(answer => {\r\n                console.log(answer);\r\n                return (\r\n                  <Button\r\n                    onClick={this.handleClick}\r\n                    id={answer.correct ? \"correct\" : \"incorrect\"}\r\n                    answer={answer.text}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"timer\">\r\n              <ProgressBar percentage={percentage} />\r\n            </div>\r\n            <div className=\"points\">\r\n              {this.state.correctAnswer + \"/\" + this.state.questionsAnswered}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (!this.state.gameRunning) {\r\n      return <Redirect to=\"/gamefinished\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\n// A stateless question component just for code readability\r\nfunction Question(props) {\r\n    return (\r\n        <div className=\"question\">\r\n            <p>{props.question}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","import React from \"react\";\r\n\r\n// A stateless button component just for code readability\r\nfunction Button(props) {\r\n  return (\r\n    <button onClick={props.onClick} id={props.id} className=\"answer-button\">\r\n      {props.answer}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Question from \"./Question\";\r\nimport Button from \"./Buttons\";\r\nimport \"../game.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Game extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      isLoading: true,\r\n      questionIndex: 0,\r\n      id: \"\",\r\n      correctAnswer: 0,\r\n      questionsAnswered: 0,\r\n      points: 0,\r\n      gameRunning: false,\r\n      wrongAnswer: 0\r\n    };\r\n\r\n    // Binding functions\r\n    this.fetchQuestions = this.fetchQuestions.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  // Fetch the questions from database\r\n  fetchQuestions() {\r\n    let numberOfQuestions = 120000;\r\n    let url =\r\n      \"http://joelmaenpaa.com:8000/api/getQuestions/\" + numberOfQuestions.toString();\r\n    console.log(url);\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let questions = [];\r\n\r\n        for (let i = 0; i < numberOfQuestions; i++) {\r\n          let arr = [...data];\r\n          arr = arr.splice(i * 13, 13);\r\n          let obj = {};\r\n          obj.question = arr[3];\r\n          obj.answers = [\r\n            { text: arr[4], correct: false },\r\n            { text: arr[5], correct: false },\r\n            { text: arr[6], correct: false },\r\n            { text: arr[7], correct: true }\r\n          ];\r\n          this.shuffle(obj.answers);\r\n          questions.push(obj);\r\n        }\r\n        this.setState({\r\n          questions: questions,\r\n          isLoading: false,\r\n          gameRunning: true\r\n        });\r\n\r\n        console.log(this.state);\r\n      })\r\n\r\n      .catch(e => console.log(\"Failed to fetch questions\", e));\r\n  }\r\n\r\n  // This will handle the button clicks\r\n  handleClick(event) {\r\n    let questionIndex = this.state.questionIndex;\r\n    let correctAnswer = this.state.correctAnswer + 1;\r\n    let questionsAnswered = this.state.questionsAnswered + 1;\r\n    let points = this.state.points;\r\n\r\n    if (event.target.id === \"correct\") {\r\n      this.setState({\r\n        correctAnswer: correctAnswer,\r\n        points: points + 10\r\n      });\r\n    }\r\n    if (event.target.id === \"incorrect\") {\r\n      this.setState({\r\n        wrongAnswer: this.state.wrongAnswer + 1\r\n      })\r\n    }\r\n    if (this.state.wrongAnswer === 3) {\r\n      this.setState({\r\n        gameRunning: false\r\n      })\r\n    }\r\n    this.setState({\r\n      questionIndex: questionIndex + 1,\r\n      questionsAnswered: questionsAnswered\r\n    });\r\n\r\n    console.log(\"Question #\" + (questionIndex + 1));\r\n    console.log(\"points: \" + this.state.points);\r\n  }\r\n\r\n  // This fetches the questions while the component mounts\r\n  // This also starts the timer\r\n  componentDidMount() {\r\n    this.fetchQuestions();\r\n  }\r\n\r\n  render() {\r\n    // Just shortening state to something prettier\r\n    const { questions, questionIndex } = this.state;\r\n\r\n    // Check if the page has finished loading\r\n    if (this.state.isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    if (this.state.gameRunning) {\r\n      return (\r\n        <div className=\"game-wrapper\">\r\n          <div className=\"game-group\">\r\n            <Question question={questions[questionIndex].question} />\r\n            <div className=\"answer-buttons\">\r\n              {questions[questionIndex].answers.map(answer => {\r\n                console.log(answer);\r\n                return (\r\n                  <Button\r\n                    onClick={this.handleClick}\r\n                    id={answer.correct ? \"correct\" : \"incorrect\"}\r\n                    answer={answer.text}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"wrong-answers\">\r\n              {\"Wrong Answers: \" + this.state.wrongAnswer + \"/3\"}\r\n            </div>\r\n            <div className=\"points\">\r\n              {this.state.correctAnswer + \"/\" + this.state.questionsAnswered}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (!this.state.gameRunning) {\r\n      return <Redirect to=\"/gamefinished\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport \"../gamefinished.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/lib/Table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass GameFinished extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      top10Players: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  getData(url, stateName) {\r\n    axios.get(url).then(({ data }) => {\r\n      this.setState({\r\n        [stateName]: data,\r\n        isLoading: false\r\n      });\r\n      console.log(this.state.top10Players);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(\"https://jsonplaceholder.typicode.com/users\", \"top10Players\");\r\n  }\r\n\r\n  render() {\r\n    const { top10Players, isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div className=\"mode-wrapper\">\r\n        <div className=\"Table\">\r\n          <Table bordered hover condensed className=\"blackfont\">\r\n            <thead>\r\n              <tr>\r\n                <th>Rank</th>\r\n                <th>Username</th>\r\n                <th>Score</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {top10Players.map((row, index) => (\r\n                <tr key={row.username}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{row.username}</td>\r\n                  <td>{row.email}</td>\r\n                </tr>\r\n              ))}\r\n              <tr className=\"playerRank\">\r\n                <td>asd </td>\r\n                <td> asddas</td>\r\n                <td> adsdasds</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <Link to=\"/classic/game\">\r\n            <button className=\"select-button\">Start Match</button>\r\n          </Link>\r\n          <Link to=\"/gameselect\">\r\n            <button className=\"select-button\">Go Back</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameFinished;\r\n","import React, { Component } from 'react';\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Dunno whatchu were looking for but it's not here...</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error;","import React, { Component } from 'react';\r\nimport '../modes.css';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/lib/Table';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ClassicMode extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            top10Players: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    getData(url, stateName) {\r\n        axios.get(url)\r\n            .then(({ data }) => {\r\n                this.setState({\r\n                    [stateName]: data,\r\n                    isLoading: false\r\n                });\r\n                console.log(this.state.top10Players);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData('https://jsonplaceholder.typicode.com/users', \"top10Players\");\r\n    }\r\n\r\n\r\n    render() {\r\n        const { top10Players, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className=\"mode-wrapper\">\r\n                <div className=\"Table\">\r\n                    <Table bordered hover condensed className=\"blackfont\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Rank</th>\r\n                                <th>Username</th>\r\n                                <th>Score</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {top10Players.map((row, index) => (\r\n                                <tr key={row.username}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{row.username}</td>\r\n                                    <td>{row.email}</td>\r\n                                </tr>\r\n                            )\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Link to=\"/classic/game\">\r\n                        <button className=\"select-button\">Start Match</button>\r\n                    </Link>\r\n                    <Link to=\"/gameselect\">\r\n                        <button className=\"select-button\">Go Back</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassicMode;","import React, { Component } from 'react';\r\nimport '../modes.css';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/lib/Table';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ClassicMode extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            top10Players: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    getData(url, stateName) {\r\n        axios.get(url)\r\n            .then(({ data }) => {\r\n                this.setState({\r\n                    [stateName]: data,\r\n                    isLoading: false\r\n                });\r\n                console.log(this.state.top10Players);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData('https://jsonplaceholder.typicode.com/users', \"top10Players\");\r\n    }\r\n\r\n\r\n    render() {\r\n        const { top10Players, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className=\"mode-wrapper\">\r\n                <div className=\"Table\">\r\n                    <Table bordered hover condensed className=\"blackfont\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Rank</th>\r\n                                <th>Username</th>\r\n                                <th>Score</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {top10Players.map((row, index) => (\r\n                                <tr key={row.username}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{row.username}</td>\r\n                                    <td>{row.email}</td>\r\n                                </tr>\r\n                            )\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Link to=\"/spree/game\">\r\n                        <button className=\"select-button\">Start Match</button>\r\n                    </Link>\r\n                    <Link to=\"/gameselect\">\r\n                        <button className=\"select-button\">Go Back</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassicMode;","import React, { Component } from 'react';\r\nimport '../modes.css';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/lib/Table';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ClassicMode extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            top10Players: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    getData(url, stateName) {\r\n        axios.get(url)\r\n            .then(({ data }) => {\r\n                this.setState({\r\n                    [stateName]: data,\r\n                    isLoading: false\r\n                });\r\n                console.log(this.state.top10Players);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData('https://jsonplaceholder.typicode.com/users', \"top10Players\");\r\n    }\r\n\r\n\r\n    render() {\r\n        const { top10Players, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className=\"mode-wrapper\">\r\n                <div className=\"Table\">\r\n                    <Table bordered hover condensed className=\"blackfont\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Rank</th>\r\n                                <th>Username</th>\r\n                                <th>Score</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {top10Players.map((row, index) => (\r\n                                <tr key={row.username}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{row.username}</td>\r\n                                    <td>{row.email}</td>\r\n                                </tr>\r\n                            )\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Link to=\"/infinite/game\">\r\n                        <button className=\"select-button\">Start Match</button>\r\n                    </Link>\r\n                    <Link to=\"/gameselect\">\r\n                        <button className=\"select-button\">Go Back</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassicMode;","// Import all the stuff we need\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n// Import the components\r\nimport StartingPage from \"./components/StartingPage/StartingPage\";\r\nimport SignInPage from \"./components/SignUpPage/SignUpPage\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Preloader from \"./components/Preloader/Preloader\";\r\nimport LogInPage from \"./components/LogInPage/LogInPage\";\r\nimport GameSelect from \"./components/GameSelect/GameSelect\";\r\nimport Classic from \"./components/Game/ClassicGame/Game\";\r\nimport Spree from \"./components/Game/SpreeGame/Game\";\r\nimport Infinite from \"./components/Game/InfiniteGame/Game\";\r\nimport GameFinished from \"./components/Game/ClassicGame/GameFinished\";\r\nimport Error from \"./components/Error/Error\";\r\nimport ClassicMode from \"./components/Modes/ClassicMode/ClassicMode\";\r\nimport SpreeMode from \"./components/Modes/SpreeMode/SpreeMode\";\r\nimport InfiniteMode from \"./components/Modes/InfiniteMode/InfiniteMode\";\r\nimport \"./main.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" component={StartingPage} exact />\r\n          <Route path=\"/login\" component={LogInPage} exact />\r\n          <Route path=\"/signup\" component={SignInPage} exact />\r\n          <Route path=\"/gameselect\" component={GameSelect} exact />\r\n          <Route path=\"/classic\" component={ClassicMode} exact />\r\n          <Route path=\"/spree\" component={SpreeMode} exact />\r\n          <Route path=\"/infinite\" component={InfiniteMode} exact />\r\n          <Route path=\"/classic/game\" component={Classic} exact />\r\n          <Route path=\"/spree/game\" component={Spree} exact />\r\n          <Route path=\"/infinite/game\" component={Infinite} exact />\r\n          <Route path=\"/gamefinished\" component={GameFinished} exact />\r\n          <Route component={Error} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nconst root = document.querySelector('#root');\r\n\r\nReactDOM.render(<App />, root);","module.exports = __webpack_public_path__ + \"static/media/madmindNoText.b020daee.png\";","module.exports = __webpack_public_path__ + \"static/media/madmind.e886468a.png\";"],"sourceRoot":""}