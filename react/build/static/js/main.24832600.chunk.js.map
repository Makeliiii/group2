{"version":3,"sources":["components/Header/Header.js","components/StartingPage/StartingPage.js","components/SignUpPage/SignUpPage.js","components/Preloader/Preloader.js","components/LogInPage/LogInPage.js","components/GameSelect/GameSelect.js","components/Game/ClassicGame/Question.js","components/Game/ClassicGame/Buttons.js","components/Game/ClassicGame/ProgressBar.js","components/Game/ClassicGame/Game.js","components/Game/SpreeGame/Question.js","components/Game/SpreeGame/Buttons.js","components/Game/SpreeGame/ProgressBar.js","components/Game/SpreeGame/Game.js","components/Game/InfiniteGame/Question.js","components/Game/InfiniteGame/Buttons.js","components/Game/InfiniteGame/Game.js","components/Game/ClassicGame/GameFinished.js","components/Game/SpreeGame/GameFinished.js","components/Game/InfiniteGame/GameFinished.js","components/Error/Error.js","components/Modes/ClassicMode/ClassicMode.js","components/Modes/SpreeMode/SpreeMode.js","components/Modes/InfiniteMode/InfiniteMode.js","App.js","index.js","img/madmind.png","img/madmindNoText.png"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","keys","navLinks","forEach","key","index","redirectRoute","push","react_default","a","createElement","react_router_dom","to","className","c","console","log","logout","alt","src","require","Component","StartingPage","components_Header_Header","signup","login","SignUpPage","id","username","password","passwordConfirm","redirect","handleSubmit","bind","assertThisInitialized","formIsValid","test","alert","length","event","_this2","preventDefault","dataModel","classic","spree","infinite","data","highScores","JSON","stringify","counts","lastScores","totalScore","handleValidation","fetch","body","method","headers","Content-Type","ACCEPT","then","response","json","myJSON","catch","err","setTimeout","setState","_this3","react_router","onSubmit","type","name","placeholder","onChange","target","value","onClick","Preloader","LogInPage","e","Accept","myJson","api_token","apiToken","userId","authenticated","pathname","token","GameSelect","location","Question","question","Button","answer","Filler","style","width","concat","percentage","ProgressBar","Game","questions","isLoading","time","questionIndex","correctAnswer","points","gameRunning","fetchQuestions","countDown","handleClick","i","j","Math","floor","random","_ref","url","toString","questionData","option1","option2","option3","obj","answers","text","correct","shuffle","timer","setInterval","clearInterval","startTimer","ans","correctAnswerStr","creator","matchType","Authorization","res","matchId","handleStartMatch","_this4","_this$state","components_Preloader_Preloader","ClassicGame_Question","map","Buttons","ClassicGame_ProgressBar","numberOfCorrectAnswers","mode","ProgressBar_Filler","questionsAnswered","SpreeGame_Question","SpreeGame_Buttons","SpreeGame_ProgressBar","wrongAnswer","InfiniteGame_Question","InfiniteGame_Buttons","GameFinished","saveMatch","isRunning","score","prevScore","newTotalscore","newhighScores","updateScore","updateObj","newTotalScore","fetchUserData","Table_default","bordered","hover","condensed","Error","ClassicMode","top10Players","stateName","axios","get","_this2$setState","defineProperty","getData","row","email","App","path","component","exact","SignInPage","SpreeMode","InfiniteMode","Classic","Spree","Infinite","ClassicGameFinished","SpreeGameFinished","InfiniteGameFinished","root","document","querySelector","ReactDOM","render","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.24832600.chunk.js","sourcesContent":["// Import all the stuff we need\r\nimport React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./header.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.keys = Object.keys(this.props);\r\n\r\n    this.navLinks = [];\r\n    this.keys.forEach((key, index) => {\r\n      let redirectRoute = \"/\" + key;\r\n      if (key === \"logout\") {\r\n        redirectRoute = \"/\";\r\n      }\r\n      this.navLinks.push(\r\n        <NavLink to={redirectRoute} className=\"navbar-link\">\r\n          {key}\r\n        </NavLink>\r\n      );\r\n    });\r\n\r\n    if (this.c === \"logout\") {\r\n      console.log(this.c);\r\n      this.redirectRoute = \"/\";\r\n    } else {\r\n      this.redirectRoute = \"/\" + this.c;\r\n    }\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.c === \"logout\") {\r\n    }\r\n  }\r\n  render() {\r\n    if (!this.props.logout) {\r\n      return (\r\n        <header className=\"header\">\r\n          {/* <NavLink to=\"/\"> */}\r\n          <img\r\n            className=\"header-logo\"\r\n            alt=\"madmind\"\r\n            src={require(\"../../img/madmind.png\")}\r\n          />\r\n          {/* </NavLink> */}\r\n          <nav className=\"navbar\">\r\n            {this.navLinks}\r\n            {/* <NavLink to={this.redirectRoute} className=\"navbar-link\">\r\n            {this.c}\r\n          </NavLink> */}\r\n            {/* <NavLink to=\"/signup\" className=\"navbar-link\">\r\n            SIGN UP\r\n          </NavLink> */}\r\n          </nav>\r\n        </header>\r\n      );\r\n    } else {\r\n      return (\r\n        <header className=\"header\">\r\n          {/* <NavLink to=\"/gameselect\"> */}\r\n          <img\r\n            className=\"header-logo\"\r\n            alt=\"madmind\"\r\n            src={require(\"../../img/madmind.png\")}\r\n          />\r\n          {/* </NavLink> */}\r\n          <nav className=\"navbar\">\r\n            {this.navLinks}\r\n            {/* <NavLink to={this.redirectRoute} className=\"navbar-link\">\r\n            {this.c}\r\n          </NavLink> */}\r\n            {/* <NavLink to=\"/signup\" className=\"navbar-link\">\r\n            SIGN UP\r\n          </NavLink> */}\r\n          </nav>\r\n        </header>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./startingPage.css\";\r\nimport Header from \"../Header/Header\";\r\n\r\nclass StartingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header signup login />\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"monkaS\">\r\n            <img\r\n              className=\"logo\"\r\n              alt=\"madmind\"\r\n              src={require(\"../../img/madmindNoText.png\")}\r\n            />\r\n            <div className=\"btn-group\">\r\n              <Link to=\"/login\">\r\n                <button className=\"btn log-in\">Login</button>\r\n              </Link>\r\n              <Link to=\"/signup\">\r\n                <button className=\"btn sign-up\">Sign Up</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartingPage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Header from \"../Header/Header\";\r\nimport \"./signUpPage.css\";\r\n\r\nclass SignUpPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: 0,\r\n      username: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      redirect: false\r\n    };\r\n\r\n    // Bind the function to make `this` work in the callback\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleValidation() {\r\n    let formIsValid = true;\r\n\r\n    // Test if the username and password are valid inputs\r\n    if (!/^[a-zA-Z0-9]+$/.test(this.state.username)) {\r\n      formIsValid = false;\r\n      alert(\"Your username can contain only letters\");\r\n    }\r\n    if (this.state.password.length < 5) {\r\n      formIsValid = false;\r\n      alert(\"Your password must be atleast 5 characters long\");\r\n    }\r\n    if (this.state.passwordConfirm !== this.state.password) {\r\n      formIsValid = false;\r\n      alert(\"Your passwords don't match\");\r\n    }\r\n    return formIsValid;\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const dataModel = {\r\n      classic: 0,\r\n      spree: 0,\r\n      infinite: 0\r\n    };\r\n\r\n    let data = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      highScores: JSON.stringify(dataModel),\r\n      counts: JSON.stringify(dataModel),\r\n      lastScores: JSON.stringify(dataModel),\r\n      totalScore: 0\r\n    };\r\n\r\n    if (this.handleValidation()) {\r\n      const url = \"http://joelmaenpaa.com:8000/api/register\";\r\n\r\n      // console.log(JSON.stringify(data));\r\n      fetch(url, {\r\n        body: JSON.stringify(data),\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ACCEPT: \"application/json\"\r\n        }\r\n        // mode : 'no-cors'\r\n      })\r\n        .then(response => response.json())\r\n        .then(myJSON => {\r\n          // console.log(myJSON);\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n      setTimeout(() => {\r\n        this.setState({ redirect: true });\r\n      }, 1000);\r\n    } else {\r\n      console.log(\"Form has errors!\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const redirect = this.state.redirect;\r\n    if (redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header login=\"true\" />\r\n        <div className=\"form-wrapper\">\r\n          <div className=\"form-group\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                className=\"signup-input\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                onChange={event =>\r\n                  this.setState({ username: event.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                className=\"signup-input\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={event =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                className=\"signup-input\"\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                placeholder=\"Confirm Password\"\r\n                onChange={event =>\r\n                  this.setState({ passwordConfirm: event.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <button\r\n                className=\"signup-button\"\r\n                onClick={event => this.handleSubmit(event)}\r\n              >\r\n                SIGN UP\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","// Import all the important stuff we need\r\nimport React, { Component } from 'react';\r\nimport './preloader.css';\r\n\r\n// Initialize the preloader component as a class type component\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div id='loader-wrapper'>\r\n                <div id=\"loader\">\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Preloader;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Header from \"../Header/Header\";\r\nclass LogInPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n      authenticated: false\r\n    };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    const url = \"http://joelmaenpaa.com:8000/api/login\";\r\n    // console.log(JSON.stringify(data));\r\n    fetch(url, {\r\n      body: JSON.stringify(data),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n        // 'Authorization': 'Bearer '+ apiToken;\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(myJson => {\r\n        if (myJson.data.api_token) {\r\n          const apiToken = myJson.data.api_token;\r\n          const userId = myJson.data.id;\r\n          this.setState({\r\n            redirect: true,\r\n            apiToken: apiToken,\r\n            authenticated: true,\r\n            userId: userId\r\n          });\r\n          // console.log(this.state.authenticated);\r\n          // console.log(apiToken);\r\n        } else {\r\n          alert(\"Login failed!\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        alert(\"Login failed!\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/gameselect\",\r\n            token: this.state.apiToken,\r\n            authenticated: this.state.authenticated,\r\n            userId: this.state.userId\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Header signup />\r\n          <div className=\"form-wrapper\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"signup-input\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                onChange={event =>\r\n                  this.setState({ username: event.target.value })\r\n                }\r\n              />\r\n              <input\r\n                className=\"signup-input\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={event =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n              />\r\n              <button className=\"signup-button\" type=\"submit\">\r\n                LOGIN\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogInPage;\r\n","import React, { Component } from \"react\";\r\nimport \"./gameSelect.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../Header/Header\";\r\n\r\nclass GameSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: this.props.location.userId,\r\n      token: this.props.location.token\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header logout />\r\n        <div className=\"select-wrapper\">\r\n          <div className=\"monkaS\">\r\n            <img\r\n              className=\"logo\"\r\n              alt=\"madmind\"\r\n              src={require(\"../../img/madmindNoText.png\")}\r\n            />\r\n            <div className=\"button-group\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/classic\",\r\n                  userId: this.state.userId,\r\n                  token: this.state.token\r\n                }}\r\n              >\r\n                <button className=\"game-button\">Classic</button>\r\n              </Link>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/spree\",\r\n                  userId: this.state.userId,\r\n                  token: this.state.token\r\n                }}\r\n              >\r\n                <button className=\"game-button\">Spree</button>\r\n              </Link>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/infinite\",\r\n                  userId: this.state.userId,\r\n                  token: this.state.token\r\n                }}\r\n              >\r\n                <button className=\"game-button\">Infinite</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameSelect;\r\n","import React from 'react';\r\n\r\n// A stateless question component just for code readability\r\nfunction Question(props) {\r\n    return (\r\n        <div className=\"question\">\r\n            <p>{props.question}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","import React from \"react\";\r\n\r\n// A stateless button component just for code readability\r\nfunction Button(props) {\r\n  return (\r\n    <button onClick={props.onClick} id={props.id} className=\"answer-button\">\r\n      {props.answer}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\n\r\n// Filler component for the progress bar\r\nfunction Filler(props) {\r\n    return <div className=\"filler\" style={{ width: `${props.percentage}%`}}/>\r\n}\r\n\r\n// The actual progress bar component\r\nfunction ProgressBar(props) {\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <Filler percentage={props.percentage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Question from \"./Question\";\r\nimport Button from \"./Buttons\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport \"../game.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      isLoading: true,\r\n      time: 1600,\r\n      questionIndex: 0,\r\n      percentage: 100,\r\n      id: \"\",\r\n      correctAnswer: 0,\r\n      points: 0,\r\n      gameRunning: false\r\n    };\r\n\r\n    // Binding functions\r\n    this.fetchQuestions = this.fetchQuestions.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  // Fetch the questions from database\r\n  fetchQuestions() {\r\n    let numberOfQuestions = 15;\r\n    let url =\r\n      \"http://joelmaenpaa.com:8000/api/getQuestions/\" +\r\n      numberOfQuestions.toString();\r\n    // console.log(url);\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const questions = [];\r\n\r\n        data.forEach(questionData => {\r\n          const {\r\n            question,\r\n            option1,\r\n            option2,\r\n            option3,\r\n            correctAnswer\r\n          } = questionData;\r\n          const obj = {};\r\n          obj.question = question;\r\n          obj.answers = [\r\n            { text: option1, correct: false },\r\n            { text: option2, correct: false },\r\n            { text: option3, correct: false },\r\n            { text: correctAnswer, correct: true }\r\n          ];\r\n          obj.correctAnswer = correctAnswer;\r\n          this.shuffle(obj.answers);\r\n          questions.push(obj);\r\n        });\r\n\r\n        this.setState({\r\n          questions: questions,\r\n          isLoading: false,\r\n          gameRunning: true\r\n        });\r\n\r\n        // console.log(this.state);\r\n      })\r\n\r\n      .catch(e => console.log(\"Failed to fetch questions\", e));\r\n  }\r\n\r\n  // This starts the countdown timer\r\n  startTimer() {\r\n    this.timer = setInterval(this.countDown, 10);\r\n  }\r\n\r\n  // This is where the actual countdown happens\r\n  countDown() {\r\n    // Declare some variables so we don't have to use a function to set state\r\n    let time = this.state.time - 1;\r\n    let questionIndex = this.state.questionIndex;\r\n    let percentage =\r\n      this.state.percentage - this.state.percentage / this.state.time;\r\n\r\n    // Set new state for time and percentage\r\n    this.setState({\r\n      time: time,\r\n      percentage: percentage\r\n    });\r\n\r\n    // If time is 0 and user is doesn't answer the last question\r\n    // (time runs out), changes the state of gameRunning to false\r\n    // and redirects the user to the gamefinished page.\r\n    if (questionIndex === 14 && time <= 0) {\r\n      this.setState({ gameRunning: false });\r\n    }\r\n\r\n    // If time is 0 or less than 0 then clear the interval,\r\n    // set state of time back to 15 seconds\r\n    // and update the question\r\n    if (time <= 0) {\r\n      clearInterval(this.timer);\r\n      this.setState({\r\n        time: 1600,\r\n        percentage: 100,\r\n        questionIndex: questionIndex + 1\r\n      });\r\n      this.startTimer();\r\n      // console.log(\"Question #\" + (questionIndex + 1));\r\n    }\r\n  }\r\n\r\n  // This will handle the button clicks\r\n  handleClick(ans, correctAnswerStr) {\r\n    let questionIndex = this.state.questionIndex;\r\n    let correctAnswer = this.state.correctAnswer + 1;\r\n    let points = this.state.points;\r\n\r\n    if (questionIndex > 13) {\r\n      this.setState({ gameRunning: false });\r\n    }\r\n    // console.log(ans, correctAnswerStr);\r\n    if (ans === correctAnswerStr) {\r\n      // console.log(\"Correctanswer\");\r\n      this.setState({\r\n        correctAnswer: correctAnswer,\r\n        points: points + 10\r\n      });\r\n    } else {\r\n      // console.log(\"Incorrectanswer\");\r\n    }\r\n\r\n    if (this.state.questionIndex === 14) {\r\n      this.setState({ gameRunning: false });\r\n    }\r\n\r\n    clearInterval(this.timer);\r\n    this.setState({\r\n      time: 1600,\r\n      percentage: 100,\r\n      questionIndex: questionIndex + 1\r\n    });\r\n\r\n    this.startTimer();\r\n    // console.log(\"Question #\" + (questionIndex + 1));\r\n    // console.log(\"points: \" + this.state.points);\r\n  }\r\n\r\n  handleStartMatch() {\r\n    // console.log(\"here state \", this.props.location);\r\n    const url = \"http://joelmaenpaa.com:8000/api/matches\";\r\n\r\n    const obj = {\r\n      creator: this.props.location.userId,\r\n      matchType: 0\r\n    };\r\n    fetch(url, {\r\n      body: JSON.stringify(obj),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ matchId: data.id });\r\n        // console.log(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // This fetches the questions while the component mounts\r\n  // This also starts the timer\r\n  componentDidMount() {\r\n    this.handleStartMatch();\r\n    this.fetchQuestions();\r\n    this.startTimer();\r\n  }\r\n\r\n  // Stop the timer if the user is a monkey\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    // Just shortening state to something prettier\r\n    const { questions, questionIndex, percentage } = this.state;\r\n\r\n    // Check if the page has finished loading\r\n    if (this.state.isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    if (this.state.gameRunning) {\r\n      return (\r\n        <div>\r\n          <Header logout />\r\n          <div className=\"game-wrapper\">\r\n            <div className=\"game-group\">\r\n              <Question question={questions[questionIndex].question} />\r\n              <div className=\"answer-buttons\">\r\n                {questions[questionIndex].answers.map(answer => {\r\n                  return (\r\n                    <Button\r\n                      onClick={() =>\r\n                        this.handleClick(\r\n                          answer.text,\r\n                          questions[questionIndex].correctAnswer\r\n                        )\r\n                      }\r\n                      answer={answer.text}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"timer\">\r\n                <ProgressBar percentage={percentage} />\r\n              </div>\r\n              <div className=\"wrong-answers\">\r\n                {\"Question #: \" +\r\n                  this.state.questionIndex +\r\n                  \"/\" +\r\n                  this.state.questions.length}\r\n              </div>\r\n              <div className=\"points\">\r\n                {\"Correct Answers: \" +\r\n                  this.state.correctAnswer +\r\n                  \"/\" +\r\n                  this.state.questions.length}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (!this.state.gameRunning) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/classic/game/finish\",\r\n            points: this.state.points,\r\n            numberOfCorrectAnswers: this.state.correctAnswer,\r\n            matchId: this.state.matchId,\r\n            token: this.props.location.token,\r\n            userId: this.props.location.userId,\r\n            mode: \"classic\"\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\n// A stateless question component just for code readability\r\nfunction Question(props) {\r\n    return (\r\n        <div className=\"question\">\r\n            <p>{props.question}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","import React from \"react\";\r\n\r\n// A stateless button component just for code readability\r\nfunction Button(props) {\r\n  return (\r\n    <button onClick={props.onClick} id={props.id} className=\"answer-button\">\r\n      {props.answer}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\n\r\n// Filler component for the progress bar\r\nfunction Filler(props) {\r\n    return <div className=\"filler\" style={{ width: `${props.percentage}%`}}/>\r\n}\r\n\r\n// The actual progress bar component\r\nfunction ProgressBar(props) {\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <Filler percentage={props.percentage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Question from \"./Question\";\r\nimport Button from \"./Buttons\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport \"../game.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      isLoading: true,\r\n      time: 6000,\r\n      questionIndex: 0,\r\n      percentage: 100,\r\n      id: \"\",\r\n      correctAnswer: 0,\r\n      questionsAnswered: 0,\r\n      points: 0,\r\n      gameRunning: false\r\n    };\r\n\r\n    // Binding functions\r\n    this.fetchQuestions = this.fetchQuestions.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  // Fetch the questions from database\r\n  fetchQuestions() {\r\n    let numberOfQuestions = 120000;\r\n    let url =\r\n      \"http://joelmaenpaa.com:8000/api/getQuestions/\" +\r\n      numberOfQuestions.toString();\r\n    // console.log(url);\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let questions = [];\r\n\r\n        data.forEach(questionData => {\r\n          const {\r\n            question,\r\n            option1,\r\n            option2,\r\n            option3,\r\n            correctAnswer\r\n          } = questionData;\r\n          const obj = {};\r\n          obj.question = question;\r\n          obj.answers = [\r\n            { text: option1, correct: false },\r\n            { text: option2, correct: false },\r\n            { text: option3, correct: false },\r\n            { text: correctAnswer, correct: true }\r\n          ];\r\n          obj.correctAnswer = correctAnswer;\r\n          this.shuffle(obj.answers);\r\n          questions.push(obj);\r\n        });\r\n\r\n        this.setState({\r\n          questions: questions,\r\n          isLoading: false,\r\n          gameRunning: true\r\n        });\r\n      })\r\n\r\n      .catch(e => console.log(\"Failed to fetch questions\", e));\r\n  }\r\n\r\n  // This starts the countdown timer\r\n  startTimer() {\r\n    this.timer = setInterval(this.countDown, 10);\r\n  }\r\n\r\n  // This is where the actual countdown happens\r\n  countDown() {\r\n    // Declare some variables so we don't have to use a function to set state\r\n    let time = this.state.time - 1;\r\n    let percentage =\r\n      this.state.percentage - this.state.percentage / this.state.time;\r\n\r\n    // Set new state for time and percentage\r\n    this.setState({\r\n      time: time,\r\n      percentage: percentage\r\n    });\r\n\r\n    if (time <= 0) {\r\n      this.setState({ gameRunning: false });\r\n    }\r\n  }\r\n\r\n  // This will handle the button clicks\r\n  handleClick(ans, correctAnswerStr) {\r\n    let questionIndex = this.state.questionIndex;\r\n    let correctAnswer = this.state.correctAnswer + 1;\r\n    let questionsAnswered = this.state.questionsAnswered + 1;\r\n    let points = this.state.points;\r\n\r\n    if (ans === correctAnswerStr) {\r\n      this.setState({\r\n        correctAnswer: correctAnswer,\r\n        points: points + 10\r\n      });\r\n    }\r\n    this.setState({\r\n      questionIndex: questionIndex + 1,\r\n      questionsAnswered: questionsAnswered\r\n    });\r\n  }\r\n\r\n  handleStartMatch() {\r\n    // console.log(\"here state \", this.props.location);\r\n    const url = \"http://joelmaenpaa.com:8000/api/matches\";\r\n\r\n    const obj = {\r\n      creator: this.props.location.userId,\r\n      matchType: 1\r\n    };\r\n    fetch(url, {\r\n      body: JSON.stringify(obj),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ matchId: data.id });\r\n        // console.log(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // This fetches the questions while the component mounts\r\n  // This also starts the timer\r\n  componentDidMount() {\r\n    this.handleStartMatch();\r\n    this.fetchQuestions();\r\n    this.startTimer();\r\n  }\r\n\r\n  // Stop the timer if the user is a monkey\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    // Just shortening state to something prettier\r\n    const { questions, questionIndex, percentage } = this.state;\r\n\r\n    // Check if the page has finished loading\r\n    if (this.state.isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    if (this.state.gameRunning) {\r\n      return (\r\n        <div>\r\n          <Header logout />\r\n          <div className=\"game-wrapper\">\r\n            <div className=\"game-group\">\r\n              <Question question={questions[questionIndex].question} />\r\n              <div className=\"answer-buttons\">\r\n                {questions[questionIndex].answers.map(answer => {\r\n                  return (\r\n                    <Button\r\n                      onClick={() =>\r\n                        this.handleClick(\r\n                          answer.text,\r\n                          questions[questionIndex].correctAnswer\r\n                        )\r\n                      }\r\n                      answer={answer.text}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"timer\">\r\n                <ProgressBar percentage={percentage} />\r\n              </div>\r\n              <div className=\"points\">\r\n                {this.state.correctAnswer + \"/\" + this.state.questionsAnswered}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (!this.state.gameRunning) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/spree/game/finish\",\r\n            points: this.state.points,\r\n            numberOfCorrectAnswers: this.state.correctAnswer,\r\n            matchId: this.state.matchId,\r\n            token: this.props.location.token,\r\n            userId: this.props.location.userId,\r\n            mode: \"spree\"\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\n// A stateless question component just for code readability\r\nfunction Question(props) {\r\n    return (\r\n        <div className=\"question\">\r\n            <p>{props.question}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","import React from \"react\";\r\n\r\n// A stateless button component just for code readability\r\nfunction Button(props) {\r\n  return (\r\n    <button onClick={props.onClick} id={props.id} className=\"answer-button\">\r\n      {props.answer}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Question from \"./Question\";\r\nimport Button from \"./Buttons\";\r\nimport \"../game.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      isLoading: true,\r\n      questionIndex: 0,\r\n      id: \"\",\r\n      correctAnswer: 0,\r\n      questionsAnswered: 0,\r\n      points: 0,\r\n      gameRunning: false,\r\n      wrongAnswer: 0\r\n    };\r\n\r\n    // Binding functions\r\n    this.fetchQuestions = this.fetchQuestions.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  // Fetch the questions from database\r\n  fetchQuestions() {\r\n    let numberOfQuestions = 120000;\r\n    let url =\r\n      \"http://joelmaenpaa.com:8000/api/getQuestions/\" +\r\n      numberOfQuestions.toString();\r\n    // console.log(url);\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let questions = [];\r\n\r\n        data.forEach(questionData => {\r\n          const {\r\n            question,\r\n            option1,\r\n            option2,\r\n            option3,\r\n            correctAnswer\r\n          } = questionData;\r\n          const obj = {};\r\n          obj.question = question;\r\n          obj.answers = [\r\n            { text: option1, correct: false },\r\n            { text: option2, correct: false },\r\n            { text: option3, correct: false },\r\n            { text: correctAnswer, correct: true }\r\n          ];\r\n          obj.correctAnswer = correctAnswer;\r\n          this.shuffle(obj.answers);\r\n          questions.push(obj);\r\n        });\r\n\r\n        this.setState({\r\n          questions: questions,\r\n          isLoading: false,\r\n          gameRunning: true\r\n        });\r\n\r\n        // console.log(this.state);\r\n      })\r\n\r\n      .catch(e => console.log(\"Failed to fetch questions\", e));\r\n  }\r\n\r\n  // This will handle the button clicks\r\n  handleClick(ans, correctAnswerStr) {\r\n    let questionIndex = this.state.questionIndex;\r\n    let correctAnswer = this.state.correctAnswer + 1;\r\n    let questionsAnswered = this.state.questionsAnswered + 1;\r\n    let points = this.state.points;\r\n\r\n    if (ans === correctAnswerStr) {\r\n      this.setState({\r\n        correctAnswer: correctAnswer,\r\n        points: points + 10\r\n      });\r\n    } else {\r\n      this.setState({\r\n        wrongAnswer: this.state.wrongAnswer + 1\r\n      });\r\n    }\r\n    if (this.state.wrongAnswer === 3) {\r\n      this.setState({\r\n        gameRunning: false\r\n      });\r\n    }\r\n    this.setState({\r\n      questionIndex: questionIndex + 1,\r\n      questionsAnswered: questionsAnswered\r\n    });\r\n\r\n    // console.log(\"Question #\" + (questionIndex + 1));\r\n    // console.log(\"points: \" + this.state.points);\r\n  }\r\n\r\n  handleStartMatch() {\r\n    // console.log(\"here state \", this.props.location);\r\n    const url = \"http://joelmaenpaa.com:8000/api/matches\";\r\n\r\n    const obj = {\r\n      creator: this.props.location.userId,\r\n      matchType: 2\r\n    };\r\n    fetch(url, {\r\n      body: JSON.stringify(obj),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ matchId: data.id });\r\n        // console.log(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // This fetches the questions while the component mounts\r\n  componentDidMount() {\r\n    this.handleStartMatch();\r\n    this.fetchQuestions();\r\n  }\r\n\r\n  render() {\r\n    // Just shortening state to something prettier\r\n    const { questions, questionIndex } = this.state;\r\n\r\n    // Check if the page has finished loading\r\n    if (this.state.isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    if (this.state.gameRunning) {\r\n      return (\r\n        <div>\r\n          <Header logout />\r\n          <div className=\"game-wrapper\">\r\n            <div className=\"game-group\">\r\n              <Question question={questions[questionIndex].question} />\r\n              <div className=\"answer-buttons\">\r\n                {questions[questionIndex].answers.map(answer => {\r\n                  return (\r\n                    <Button\r\n                      onClick={() =>\r\n                        this.handleClick(\r\n                          answer.text,\r\n                          questions[questionIndex].correctAnswer\r\n                        )\r\n                      }\r\n                      answer={answer.text}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"wrong-answers\">\r\n                {\"Wrong Answers: \" + this.state.wrongAnswer + \"/3\"}\r\n              </div>\r\n              <div className=\"points\">\r\n                {\"Question #: \" + this.state.questionsAnswered}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (!this.state.gameRunning) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/infinite/game/finish\",\r\n            points: this.state.points,\r\n            numberOfCorrectAnswers: this.state.correctAnswer,\r\n            matchId: this.state.matchId,\r\n            token: this.props.location.token,\r\n            userId: this.props.location.userId,\r\n            mode: \"infinite\"\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport \"../gamefinished.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Table from \"react-bootstrap/lib/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nclass GameFinished extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      userId: this.props.location.userId,\r\n      token: this.props.location.token\r\n    };\r\n\r\n    this.saveMatch();\r\n  }\r\n\r\n  saveMatch() {\r\n    const url = \"http://joelmaenpaa.com:8000/api/matches/update\";\r\n\r\n    const obj = {\r\n      id: this.props.location.matchId,\r\n      isRunning: false,\r\n      numberOfCorrectAnswers: this.props.location.numberOfCorrectAnswers,\r\n      score: this.props.location.points\r\n    };\r\n\r\n    // console.log(\"match update obj\", obj);\r\n    fetch(url, {\r\n      body: JSON.stringify(obj),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // console.log(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  fetchUserData() {\r\n    const url =\r\n      \"http://joelmaenpaa.com:8000/api/users/\" + this.props.location.userId;\r\n\r\n    // console.log(\"user fetching from\", url);\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // console.log(\"user data be \", data);\r\n\r\n        let prevScore = data.highScores[this.props.location.mode];\r\n        this.setState({ username: data.username, isLoading: false });\r\n\r\n        if (this.props.location.points > prevScore) {\r\n          const keys = Object.keys(data.highScores);\r\n          const newTotalscore =\r\n            data.totalScore - prevScore + this.props.location.points;\r\n\r\n          const newhighScores = {};\r\n          keys.forEach(key => {\r\n            if (key !== this.props.location.mode) {\r\n              newhighScores[key] = data.highScores.key;\r\n            } else {\r\n              newhighScores[key] = this.props.location.points;\r\n            }\r\n          });\r\n\r\n          this.updateScore(newhighScores, newTotalscore);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  updateScore(updateObj, newTotalScore) {\r\n    const url = \"http://joelmaenpaa.com:8000/api/users/update\";\r\n\r\n    const data = {\r\n      updateObj,\r\n      newTotalScore,\r\n      userId: this.props.location.userId\r\n    };\r\n    fetch(url, {\r\n      body: JSON.stringify(data),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(myJSON => {\r\n        // console.log(myJSON);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  componentDidMount() {\r\n    this.fetchUserData();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header logout />\r\n        <div className=\"mode-wrapper\">\r\n          <div className=\"Table\">\r\n            <h1 className=\"kentteri margini\">Your Highest Score</h1>\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.state.username}</td>\r\n                  <td>##</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            <h1 className=\"kentteri margini\">Your Last Score</h1>\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.state.username}</td>\r\n                  <td>{this.props.location.points}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <div className=\"text-center nappimargin\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/classic/game\",\r\n                token: this.state.token,\r\n                userId: this.state.userId\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Start Match</button>\r\n            </Link>\r\n            <Link\r\n              to={{\r\n                pathname: \"/gameselect\",\r\n                token: this.state.token,\r\n                userId: this.state.userId\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Go Back</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameFinished;\r\n","import React, { Component } from \"react\";\r\nimport \"../gamefinished.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Table from \"react-bootstrap/lib/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nclass GameFinished extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      userId: this.props.location.userId,\r\n      token: this.props.location.token\r\n    };\r\n    this.saveMatch();\r\n  }\r\n\r\n  saveMatch() {\r\n    const url = \"http://joelmaenpaa.com:8000/api/matches/update\";\r\n\r\n    const obj = {\r\n      id: this.props.location.matchId,\r\n      isRunning: false,\r\n      numberOfCorrectAnswers: this.props.location.numberOfCorrectAnswers,\r\n      score: this.props.location.points\r\n    };\r\n\r\n    // console.log(\"match update obj\", obj);\r\n    fetch(url, {\r\n      body: JSON.stringify(obj),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // console.log(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  fetchUserData() {\r\n    const url =\r\n      \"http://joelmaenpaa.com:8000/api/users/\" + this.props.location.userId;\r\n\r\n    // console.log(\"user fetching from\", url);\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // console.log(\"user data be \", data);\r\n\r\n        let prevScore = data.highScores[this.props.location.mode];\r\n        this.setState({ username: data.username, isLoading: false });\r\n\r\n        if (this.props.location.points > prevScore) {\r\n          const keys = Object.keys(data.highScores);\r\n          const newTotalscore =\r\n            data.totalScore - prevScore + this.props.location.points;\r\n\r\n          const newhighScores = {};\r\n          keys.forEach(key => {\r\n            if (key !== this.props.location.mode) {\r\n              newhighScores[key] = data.highScores.key;\r\n            } else {\r\n              newhighScores[key] = this.props.location.points;\r\n            }\r\n          });\r\n\r\n          this.updateScore(newhighScores, newTotalscore);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  updateScore(updateObj, newTotalScore) {\r\n    const url = \"http://joelmaenpaa.com:8000/api/users/scores\";\r\n\r\n    const data = {\r\n      updateObj,\r\n      newTotalScore,\r\n      userId: this.props.location.userId\r\n    };\r\n    fetch(url, {\r\n      body: JSON.stringify(data),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(myJSON => {\r\n        // console.log(myJSON);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  componentDidMount() {\r\n    this.fetchUserData();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header logout />\r\n        <div className=\"mode-wrapper\">\r\n          <div className=\"Table\">\r\n            <h1 className=\"kentteri margini\">Your Highest Score</h1>\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.state.username}</td>\r\n                  <td>##</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            <h1 className=\"kentteri margini\">Your Last Score</h1>\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.state.username}</td>\r\n                  <td>{this.props.location.points}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <div className=\"text-center nappimargin\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/spree/game\",\r\n                token: this.state.token,\r\n                userId: this.state.userId\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Start Match</button>\r\n            </Link>\r\n            <Link\r\n              to={{\r\n                pathname: \"/gameselect\",\r\n                token: this.state.token,\r\n                userId: this.state.userId\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Go Back</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameFinished;\r\n","import React, { Component } from \"react\";\r\nimport \"../gamefinished.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Table from \"react-bootstrap/lib/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nclass GameFinished extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      userId: this.props.location.userId,\r\n      token: this.props.location.token\r\n    };\r\n\r\n    this.saveMatch();\r\n  }\r\n\r\n  saveMatch() {\r\n    const url = \"http://joelmaenpaa.com:8000/api/matches/update\";\r\n\r\n    const obj = {\r\n      id: this.props.location.matchId,\r\n      isRunning: false,\r\n      numberOfCorrectAnswers: this.props.location.numberOfCorrectAnswers,\r\n      score: this.props.location.points\r\n    };\r\n\r\n    // console.log(\"match update obj\", obj);\r\n    fetch(url, {\r\n      body: JSON.stringify(obj),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // console.log(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  fetchUserData() {\r\n    const url =\r\n      \"http://joelmaenpaa.com:8000/api/users/\" + this.props.location.userId;\r\n\r\n    // console.log(\"user fetching from\", url);\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // console.log(\"user data be \", data);\r\n\r\n        let prevScore = data.highScores[this.props.location.mode];\r\n        this.setState({ username: data.username, isLoading: false });\r\n\r\n        if (this.props.location.points > prevScore) {\r\n          const keys = Object.keys(data.highScores);\r\n          const newTotalscore =\r\n            data.totalScore - prevScore + this.props.location.points;\r\n\r\n          const newhighScores = {};\r\n          keys.forEach(key => {\r\n            if (key !== this.props.location.mode) {\r\n              newhighScores[key] = data.highScores.key;\r\n            } else {\r\n              newhighScores[key] = this.props.location.points;\r\n            }\r\n          });\r\n\r\n          this.updateScore(newhighScores, newTotalscore);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  updateScore(updateObj, newTotalScore) {\r\n    const url = \"http://joelmaenpaa.com:8000/api/users/scores\";\r\n\r\n    const data = {\r\n      updateObj,\r\n      newTotalScore,\r\n      userId: this.props.location.userId\r\n    };\r\n    fetch(url, {\r\n      body: JSON.stringify(data),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(myJSON => {\r\n        // console.log(myJSON);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  componentDidMount() {\r\n    this.fetchUserData();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header logout />\r\n        <div className=\"mode-wrapper\">\r\n          <div className=\"Table\">\r\n            <h1 className=\"kentteri margini\">Your Highest Score</h1>\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.state.username}</td>\r\n                  <td>##</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            <h1 className=\"kentteri margini\">Your Last Score</h1>\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.state.username}</td>\r\n                  <td>{this.props.location.points}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <div className=\"text-center nappimargin\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/infinite/game\",\r\n                token: this.state.token,\r\n                userId: this.state.userId\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Start Match</button>\r\n            </Link>\r\n            <Link\r\n              to={{\r\n                pathname: \"/gameselect\",\r\n                token: this.state.token,\r\n                userId: this.state.userId\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Go Back</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameFinished;\r\n","import React, { Component } from 'react';\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Dunno whatchu were looking for but it's not here...</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error;","import React, { Component } from \"react\";\r\nimport \"../modes.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/lib/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\nclass ClassicMode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      top10Players: [],\r\n      isLoading: true,\r\n      userId: this.props.location.userId,\r\n      token: this.props.location.token\r\n    };\r\n  }\r\n\r\n  getData(url, stateName) {\r\n    axios.get(url).then(({ data }) => {\r\n      this.setState({\r\n        [stateName]: data,\r\n        isLoading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(\"https://jsonplaceholder.typicode.com/users\", \"top10Players\");\r\n  }\r\n\r\n  handleStartMatch() {\r\n    // console.log(\"here state \", this.props);\r\n    const url = \"http://joelmaenpaa.com:8000/api/matches\";\r\n\r\n    const obj = {\r\n      creator: this.props.location.userId,\r\n      matchType: 0\r\n    };\r\n    fetch(url, {\r\n      body: JSON.stringify(obj),\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ACCEPT: \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.location.token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ matchId: data.id, redirect: true });\r\n        console.log(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { top10Players, isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header logout />\r\n        <div className=\"mode-wrapper\">\r\n          <div className=\"Table\">\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Rank</th>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {top10Players.map((row, index) => (\r\n                  <tr key={row.username}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{row.username}</td>\r\n                    <td>{row.email}</td>\r\n                  </tr>\r\n                ))}\r\n                <tr className=\"playerRank\">\r\n                  <td>asd </td>\r\n                  <td> asddas</td>\r\n                  <td> adsdasds</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/classic/game\",\r\n                userId: this.state.userId,\r\n                token: this.state.token,\r\n                mode: \"classic\"\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Start Match</button>\r\n            </Link>\r\n            <Link\r\n              to={{\r\n                pathname: \"/gameselect\",\r\n                userId: this.props.location.userId,\r\n                token: this.props.location.token\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Go Back</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassicMode;\r\n","import React, { Component } from \"react\";\r\nimport \"../modes.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/lib/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nclass ClassicMode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      top10Players: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  getData(url, stateName) {\r\n    axios.get(url).then(({ data }) => {\r\n      this.setState({\r\n        [stateName]: data,\r\n        isLoading: false\r\n      });\r\n      // console.log(this.state.top10Players);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(\"https://jsonplaceholder.typicode.com/users\", \"top10Players\");\r\n  }\r\n\r\n  render() {\r\n    const { top10Players, isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header logout />\r\n        <div className=\"mode-wrapper\">\r\n          <div className=\"Table\">\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Rank</th>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {top10Players.map((row, index) => (\r\n                  <tr key={row.username}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{row.username}</td>\r\n                    <td>{row.email}</td>\r\n                  </tr>\r\n                ))}\r\n                <tr className=\"playerRank\">\r\n                  <td>asd </td>\r\n                  <td> asddas</td>\r\n                  <td> adsdasds</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/spree/game\",\r\n                userId: this.props.location.userId,\r\n                token: this.props.location.token\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Start Match</button>\r\n            </Link>\r\n            <Link\r\n              to={{\r\n                pathname: \"/gameselect\",\r\n                userId: this.props.location.userId,\r\n                token: this.props.location.token\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Go Back</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassicMode;\r\n","import React, { Component } from \"react\";\r\nimport \"../modes.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/lib/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nclass ClassicMode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      top10Players: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  getData(url, stateName) {\r\n    axios.get(url).then(({ data }) => {\r\n      this.setState({\r\n        [stateName]: data,\r\n        isLoading: false\r\n      });\r\n      // console.log(this.state.top10Players);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(\"https://jsonplaceholder.typicode.com/users\", \"top10Players\");\r\n  }\r\n\r\n  render() {\r\n    const { top10Players, isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header logout />\r\n        <div className=\"mode-wrapper\">\r\n          <div className=\"Table\">\r\n            <Table bordered hover condensed className=\"blackfont\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Rank</th>\r\n                  <th>Username</th>\r\n                  <th>Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {top10Players.map((row, index) => (\r\n                  <tr key={row.username}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{row.username}</td>\r\n                    <td>{row.email}</td>\r\n                  </tr>\r\n                ))}\r\n                <tr className=\"playerRank\">\r\n                  <td>asd </td>\r\n                  <td> asddas</td>\r\n                  <td> adsdasds</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/infinite/game\",\r\n                userId: this.props.location.userId,\r\n                token: this.props.location.token\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Start Match</button>\r\n            </Link>\r\n            <Link\r\n              to={{\r\n                pathname: \"/gameselect\",\r\n                userId: this.props.location.userId,\r\n                token: this.props.location.token\r\n              }}\r\n            >\r\n              <button className=\"select-button\">Go Back</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassicMode;\r\n","// Import all the stuff we need\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n// Import the components\r\nimport StartingPage from \"./components/StartingPage/StartingPage\";\r\nimport SignInPage from \"./components/SignUpPage/SignUpPage\";\r\n\r\nimport Preloader from \"./components/Preloader/Preloader\";\r\nimport LogInPage from \"./components/LogInPage/LogInPage\";\r\nimport GameSelect from \"./components/GameSelect/GameSelect\";\r\nimport Classic from \"./components/Game/ClassicGame/Game\";\r\nimport Spree from \"./components/Game/SpreeGame/Game\";\r\nimport Infinite from \"./components/Game/InfiniteGame/Game\";\r\nimport ClassicGameFinished from \"./components/Game/ClassicGame/GameFinished\";\r\nimport SpreeGameFinished from \"./components/Game/SpreeGame/GameFinished\";\r\nimport InfiniteGameFinished from \"./components/Game/InfiniteGame/GameFinished\";\r\nimport Error from \"./components/Error/Error\";\r\nimport ClassicMode from \"./components/Modes/ClassicMode/ClassicMode\";\r\nimport SpreeMode from \"./components/Modes/SpreeMode/SpreeMode\";\r\nimport InfiniteMode from \"./components/Modes/InfiniteMode/InfiniteMode\";\r\nimport \"./main.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" component={StartingPage} exact />\r\n          <Route path=\"/login\" component={LogInPage} exact />\r\n          <Route path=\"/signup\" component={SignInPage} exact />\r\n          <Route path=\"/gameselect\" component={GameSelect} exact />\r\n          <Route path=\"/classic\" component={ClassicMode} exact />\r\n          <Route path=\"/spree\" component={SpreeMode} exact />\r\n          <Route path=\"/infinite\" component={InfiniteMode} exact />\r\n          <Route path=\"/classic/game\" component={Classic} exact />\r\n          <Route path=\"/spree/game\" component={Spree} exact />\r\n          <Route path=\"/infinite/game\" component={Infinite} exact />\r\n          <Route path=\"/classic/game/finish\" component={ClassicGameFinished} exact />\r\n          <Route path=\"/spree/game/finish\" component={SpreeGameFinished} exact />\r\n          <Route path=\"/infinite/game/finish\" component={InfiniteGameFinished} exact />\r\n          <Route component={Error} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nconst root = document.querySelector('#root');\r\n\r\nReactDOM.render(<App />, root);","module.exports = __webpack_public_path__ + \"static/media/madmind.e886468a.png\";","module.exports = __webpack_public_path__ + \"static/media/madmindNoText.b020daee.png\";"],"sourceRoot":""}